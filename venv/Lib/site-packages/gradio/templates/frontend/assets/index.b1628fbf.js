import{S as p,i as f,s as _,d as u,Z as m,v as d,h,b as w,c as v,e as y,_ as g,$ as G,a0 as b,D as E,E as j,g as P}from"./index.66004ba3.js";const S="src/components/Group/Group.svelte";function l(a){let t,r;const i=a[3].default,o=m(i,a,a[2],null),c={c:function(){t=h("div"),o&&o.c(),w(t,"class","s-jQ0ZzGz_YAZG"),v(t,S,8,0,188)},l:function(n){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(n,e){y(n,t,e),o&&o.m(t,null),r=!0},p:function(n,[e]){o&&o.p&&(!r||e&4)&&g(o,i,n,n[2],r?b(i,n[2],e,null):G(n[2]),null)},i:function(n){r||(E(o,n),r=!0)},o:function(n){j(o,n),r=!1},d:function(n){n&&P(t),o&&o.d(n)}};return u("SvelteRegisterBlock",{block:c,id:l.name,type:"component",source:"",ctx:a}),c}function C(a,t,r){let{$$slots:i={},$$scope:o}=t;d("Group",i,["default"]);let{parent:c=null}=t,{style:s={}}=t;typeof s.mobile_collapse!="boolean"&&(s.mobile_collapse=!0);const n=["parent","style"];return Object.keys(t).forEach(e=>{!~n.indexOf(e)&&e.slice(0,2)!=="$$"&&e!=="slot"&&console.warn(`<Group> was created with unknown prop '${e}'`)}),a.$$set=e=>{"parent"in e&&r(1,c=e.parent),"style"in e&&r(0,s=e.style),"$$scope"in e&&r(2,o=e.$$scope)},a.$capture_state=()=>({parent:c,style:s}),a.$inject_state=e=>{"parent"in e&&r(1,c=e.parent),"style"in e&&r(0,s=e.style)},t&&"$$inject"in t&&a.$inject_state(t.$$inject),[s,c,o,i]}class Z extends p{constructor(t){super(t),f(this,t,C,l,_,{parent:1,style:0}),u("SvelteRegisterComponent",{component:this,tagName:"Group",options:t,id:l.name})}get parent(){throw new Error("<Group>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set parent(t){throw new Error("<Group>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get style(){throw new Error("<Group>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set style(t){throw new Error("<Group>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}var z=Z;const D=["static"];export{z as Component,D as modes};
