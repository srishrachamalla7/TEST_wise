import{S as p,i as h,s as d,d as _,Z as g,v as b,h as v,b as w,t as f,c as y,e as R,_ as E,$ as j,a0 as q,D as P,E as S,g as C}from"./index.66004ba3.js";import{c as u}from"./styles.d87a390f.js";const k="src/components/Row/Row.svelte";function m(s){let t,n,l;const c=s[3].default,o=g(c,s,s[2],null),a={c:function(){t=v("div"),o&&o.c(),w(t,"class",n="flex md:flex-row gr-gap gr-form-gap row w-full "+u(s[0])),f(t,"mobile-row",s[0].mobile_collapse===!1),f(t,"unequal-height",s[0].equal_height===!1),f(t,"flex-col",s[0].mobile_collapse),y(t,k,8,0,212)},l:function(e){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(e,i){R(e,t,i),o&&o.m(t,null),l=!0},p:function(e,[i]){o&&o.p&&(!l||i&4)&&E(o,c,e,e[2],l?q(c,e[2],i,null):j(e[2]),null),(!l||i&1&&n!==(n="flex md:flex-row gr-gap gr-form-gap row w-full "+u(e[0])))&&w(t,"class",n),i&1&&f(t,"mobile-row",e[0].mobile_collapse===!1),i&1&&f(t,"unequal-height",e[0].equal_height===!1),i&1&&f(t,"flex-col",e[0].mobile_collapse)},i:function(e){l||(P(o,e),l=!0)},o:function(e){S(o,e),l=!1},d:function(e){e&&C(t),o&&o.d(e)}};return _("SvelteRegisterBlock",{block:a,id:m.name,type:"component",source:"",ctx:s}),a}function D(s,t,n){let{$$slots:l={},$$scope:c}=t;b("Row",l,["default"]);let{parent:o=null}=t,{style:a={}}=t;typeof a.mobile_collapse!="boolean"&&(a.mobile_collapse=!0);const r=["parent","style"];return Object.keys(t).forEach(e=>{!~r.indexOf(e)&&e.slice(0,2)!=="$$"&&e!=="slot"&&console.warn(`<Row> was created with unknown prop '${e}'`)}),s.$$set=e=>{"parent"in e&&n(1,o=e.parent),"style"in e&&n(0,a=e.style),"$$scope"in e&&n(2,c=e.$$scope)},s.$capture_state=()=>({create_classes:u,parent:o,style:a}),s.$inject_state=e=>{"parent"in e&&n(1,o=e.parent),"style"in e&&n(0,a=e.style)},t&&"$$inject"in t&&s.$inject_state(t.$$inject),[a,o,c,l]}class O extends p{constructor(t){super(t),h(this,t,D,m,d,{parent:1,style:0}),_("SvelteRegisterComponent",{component:this,tagName:"Row",options:t,id:m.name})}get parent(){throw new Error("<Row>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set parent(t){throw new Error("<Row>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get style(){throw new Error("<Row>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set style(t){throw new Error("<Row>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}var Z=O;const z=["static"];export{Z as Component,z as modes};
