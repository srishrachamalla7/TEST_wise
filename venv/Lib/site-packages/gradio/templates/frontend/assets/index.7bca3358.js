import{S as K,i as L,s as M,d as _,o as N,v as V,y as U,h as y,w as D,k as z,b as p,c as C,t as q,e as g,f as v,l as $,a9 as F,m as A,g as k,B as x,C as E,D as P,E as B,F as j,u as ee,R as H,T as oe,I as te,L as se,K as ne,U as ce,V as re,M as le}from"./index.66004ba3.js";import{c as S}from"./styles.d87a390f.js";import{B as J}from"./BlockTitle.e06721de.js";import{B as Q}from"./Block.65486579.js";const G="mnt/c/Users/islam/dev/gradio-repos/gradio/ui/packages/form/src/CheckboxGroup.svelte";function I(t,e,o){const c=t.slice();return c[9]=e[o],c[11]=o,c}function W(t){let e;const o={c:function(){e=z(t[4])},m:function(f,n){g(f,e,n)},p:function(f,n){n&16&&A(e,f[4])},d:function(f){f&&k(e)}};return _("SvelteRegisterBlock",{block:o,id:W.name,type:"slot",source:"(23:0) <BlockTitle {show_label}>",ctx:t}),o}function R(t){let e,o,c,f,n,i=t[9]+"",d,h,a,m;function u(){return t[7](t[9])}const r={c:function(){e=y("label"),o=y("input"),f=D(),n=y("span"),d=z(i),o.disabled=t[3],o.checked=c=t[0].includes(t[9]),p(o,"type","checkbox"),p(o,"name","test"),p(o,"class","gr-check-radio gr-checkbox"),C(o,G,31,3,941),p(n,"class","ml-2"),C(n,G,38,6,1124),p(e,"class",h="flex items-center text-gray-700 text-sm space-x-2 border py-1.5 px-3 rounded-lg cursor-pointer bg-white shadow-sm checked:shadow-inner"+S(t[1])),q(e,"!cursor-not-allowed",t[3]),C(e,G,26,2,711)},m:function(w,s){g(w,e,s),v(e,o),v(e,f),v(e,n),v(n,d),a||(m=$(o,"change",u,!1,!1,!1),a=!0)},p:function(w,s){t=w,s&8&&F(o,"disabled",t[3]),s&5&&c!==(c=t[0].includes(t[9]))&&F(o,"checked",c),s&4&&i!==(i=t[9]+"")&&A(d,i),s&2&&h!==(h="flex items-center text-gray-700 text-sm space-x-2 border py-1.5 px-3 rounded-lg cursor-pointer bg-white shadow-sm checked:shadow-inner"+S(t[1]))&&p(e,"class",h),s&10&&q(e,"!cursor-not-allowed",t[3])},d:function(w){w&&k(e),a=!1,m()}};return _("SvelteRegisterBlock",{block:r,id:R.name,type:"each",source:"(26:1) {#each choices as choice, i}",ctx:t}),r}function O(t){let e,o,c,f;e=new J({props:{show_label:t[5],$$slots:{default:[W]},$$scope:{ctx:t}},$$inline:!0});let n=t[2];N(n);let i=[];for(let h=0;h<n.length;h+=1)i[h]=R(I(t,n,h));const d={c:function(){x(e.$$.fragment),o=D(),c=y("div");for(let a=0;a<i.length;a+=1)i[a].c();p(c,"class","flex flex-wrap gap-2"),p(c,"data-testid","checkbox-group"),C(c,G,24,0,615)},l:function(a){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(a,m){E(e,a,m),g(a,o,m),g(a,c,m);for(let u=0;u<i.length;u+=1)i[u].m(c,null);f=!0},p:function(a,[m]){const u={};if(m&32&&(u.show_label=a[5]),m&4112&&(u.$$scope={dirty:m,ctx:a}),e.$set(u),m&79){n=a[2],N(n);let r;for(r=0;r<n.length;r+=1){const b=I(a,n,r);i[r]?i[r].p(b,m):(i[r]=R(b),i[r].c(),i[r].m(c,null))}for(;r<i.length;r+=1)i[r].d(1);i.length=n.length}},i:function(a){f||(P(e.$$.fragment,a),f=!0)},o:function(a){B(e.$$.fragment,a),f=!1},d:function(a){j(e,a),a&&k(o),a&&k(c),ee(i,a)}};return _("SvelteRegisterBlock",{block:d,id:O.name,type:"component",source:"",ctx:t}),d}function ie(t,e,o){let{$$slots:c={},$$scope:f}=e;V("CheckboxGroup",c,[]);let{value:n=[]}=e,{style:i={}}=e,{choices:d}=e,{disabled:h=!1}=e,{label:a}=e,{show_label:m}=e;const u=U(),r=s=>{n.includes(s)?n.splice(n.indexOf(s),1):n.push(s),u("change",n),o(0,n)},b=["value","style","choices","disabled","label","show_label"];Object.keys(e).forEach(s=>{!~b.indexOf(s)&&s.slice(0,2)!=="$$"&&s!=="slot"&&console.warn(`<CheckboxGroup> was created with unknown prop '${s}'`)});const w=s=>r(s);return t.$$set=s=>{"value"in s&&o(0,n=s.value),"style"in s&&o(1,i=s.style),"choices"in s&&o(2,d=s.choices),"disabled"in s&&o(3,h=s.disabled),"label"in s&&o(4,a=s.label),"show_label"in s&&o(5,m=s.show_label)},t.$capture_state=()=>({createEventDispatcher:U,BlockTitle:J,create_classes:S,value:n,style:i,choices:d,disabled:h,label:a,show_label:m,dispatch:u,toggleChoice:r}),t.$inject_state=s=>{"value"in s&&o(0,n=s.value),"style"in s&&o(1,i=s.style),"choices"in s&&o(2,d=s.choices),"disabled"in s&&o(3,h=s.disabled),"label"in s&&o(4,a=s.label),"show_label"in s&&o(5,m=s.show_label)},e&&"$$inject"in e&&t.$inject_state(e.$$inject),[n,i,d,h,a,m,r,w]}class X extends K{constructor(e){super(e),L(this,e,ie,O,M,{value:0,style:1,choices:2,disabled:3,label:4,show_label:5}),_("SvelteRegisterComponent",{component:this,tagName:"CheckboxGroup",options:e,id:O.name});const{ctx:o}=this.$$,c=e.props||{};o[2]===void 0&&!("choices"in c)&&console.warn("<CheckboxGroup> was created without expected prop 'choices'"),o[4]===void 0&&!("label"in c)&&console.warn("<CheckboxGroup> was created without expected prop 'label'"),o[5]===void 0&&!("show_label"in c)&&console.warn("<CheckboxGroup> was created without expected prop 'show_label'")}get value(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set value(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get style(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set style(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get choices(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set choices(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get disabled(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set disabled(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get label(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set label(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get show_label(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set show_label(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}function Y(t){let e,o,c,f,n;const i=[t[8]];let d={};for(let u=0;u<i.length;u+=1)d=oe(d,i[u]);e=new H({props:d,$$inline:!0});function h(u){t[9](u)}let a={choices:t[2],label:t[5],style:t[3],show_label:t[7],disabled:t[4]==="static"};t[0]!==void 0&&(a.value=t[0]),c=new X({props:a,$$inline:!0}),te.push(()=>se(c,"value",h)),c.$on("change",t[10]);const m={c:function(){x(e.$$.fragment),o=D(),x(c.$$.fragment)},m:function(r,b){E(e,r,b),g(r,o,b),E(c,r,b),n=!0},p:function(r,b){const w=b&256?ce(i,[re(r[8])]):{};e.$set(w);const s={};b&4&&(s.choices=r[2]),b&32&&(s.label=r[5]),b&8&&(s.style=r[3]),b&128&&(s.show_label=r[7]),b&16&&(s.disabled=r[4]==="static"),!f&&b&1&&(f=!0,s.value=r[0],le(()=>f=!1)),c.$set(s)},i:function(r){n||(P(e.$$.fragment,r),P(c.$$.fragment,r),n=!0)},o:function(r){B(e.$$.fragment,r),B(c.$$.fragment,r),n=!1},d:function(r){j(e,r),r&&k(o),j(c,r)}};return _("SvelteRegisterBlock",{block:m,id:Y.name,type:"slot",source:'(15:0) <Block {form_position} {elem_id} {style} type=\\"fieldset\\">',ctx:t}),m}function T(t){let e,o;e=new Q({props:{form_position:t[6],elem_id:t[1],style:t[3],type:"fieldset",$$slots:{default:[Y]},$$scope:{ctx:t}},$$inline:!0});const c={c:function(){x(e.$$.fragment)},l:function(n){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(n,i){E(e,n,i),o=!0},p:function(n,[i]){const d={};i&64&&(d.form_position=n[6]),i&2&&(d.elem_id=n[1]),i&8&&(d.style=n[3]),i&2493&&(d.$$scope={dirty:i,ctx:n}),e.$set(d)},i:function(n){o||(P(e.$$.fragment,n),o=!0)},o:function(n){B(e.$$.fragment,n),o=!1},d:function(n){j(e,n)}};return _("SvelteRegisterBlock",{block:c,id:T.name,type:"component",source:"",ctx:t}),c}function ae(t,e,o){let{$$slots:c={},$$scope:f}=e;V("CheckboxGroup",c,[]);let{elem_id:n=""}=e,{value:i=[]}=e,{choices:d}=e,{style:h={}}=e,{mode:a}=e,{label:m="Checkbox Group"}=e,{form_position:u="single"}=e,{show_label:r}=e,{loading_status:b}=e;const w=["elem_id","value","choices","style","mode","label","form_position","show_label","loading_status"];Object.keys(e).forEach(l=>{!~w.indexOf(l)&&l.slice(0,2)!=="$$"&&l!=="slot"&&console.warn(`<CheckboxGroup> was created with unknown prop '${l}'`)});function s(l){i=l,o(0,i)}function Z(l){ne.call(this,t,l)}return t.$$set=l=>{"elem_id"in l&&o(1,n=l.elem_id),"value"in l&&o(0,i=l.value),"choices"in l&&o(2,d=l.choices),"style"in l&&o(3,h=l.style),"mode"in l&&o(4,a=l.mode),"label"in l&&o(5,m=l.label),"form_position"in l&&o(6,u=l.form_position),"show_label"in l&&o(7,r=l.show_label),"loading_status"in l&&o(8,b=l.loading_status)},t.$capture_state=()=>({CheckboxGroup:X,Block:Q,StatusTracker:H,elem_id:n,value:i,choices:d,style:h,mode:a,label:m,form_position:u,show_label:r,loading_status:b}),t.$inject_state=l=>{"elem_id"in l&&o(1,n=l.elem_id),"value"in l&&o(0,i=l.value),"choices"in l&&o(2,d=l.choices),"style"in l&&o(3,h=l.style),"mode"in l&&o(4,a=l.mode),"label"in l&&o(5,m=l.label),"form_position"in l&&o(6,u=l.form_position),"show_label"in l&&o(7,r=l.show_label),"loading_status"in l&&o(8,b=l.loading_status)},e&&"$$inject"in e&&t.$inject_state(e.$$inject),[i,n,d,h,a,m,u,r,b,s,Z]}class ue extends K{constructor(e){super(e),L(this,e,ae,T,M,{elem_id:1,value:0,choices:2,style:3,mode:4,label:5,form_position:6,show_label:7,loading_status:8}),_("SvelteRegisterComponent",{component:this,tagName:"CheckboxGroup_1",options:e,id:T.name});const{ctx:o}=this.$$,c=e.props||{};o[2]===void 0&&!("choices"in c)&&console.warn("<CheckboxGroup> was created without expected prop 'choices'"),o[4]===void 0&&!("mode"in c)&&console.warn("<CheckboxGroup> was created without expected prop 'mode'"),o[7]===void 0&&!("show_label"in c)&&console.warn("<CheckboxGroup> was created without expected prop 'show_label'"),o[8]===void 0&&!("loading_status"in c)&&console.warn("<CheckboxGroup> was created without expected prop 'loading_status'")}get elem_id(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_id(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get value(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set value(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get choices(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set choices(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get style(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set style(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get mode(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set mode(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get label(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set label(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get form_position(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set form_position(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get show_label(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set show_label(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get loading_status(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set loading_status(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}var be=ue;const we=["static","dynamic"];export{be as Component,we as modes};
