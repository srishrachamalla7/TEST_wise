import{S as K,i as L,s as M,d as w,v as V,y as R,ab as C,h as D,B as p,w as z,b as g,c as O,e as B,C as v,f as T,aa as U,l as q,a9 as Z,ap as A,D as y,E as N,g as S,F as E,r as x,k as $,m as ee,R as G,T as te,I as se,L as ne,K as F,U as oe,V as re,M as le}from"./index.66004ba3.js";import{B as H}from"./Block.65486579.js";import{c as k}from"./styles.d87a390f.js";import{B as J}from"./BlockTitle.e06721de.js";const I="mnt/c/Users/islam/dev/gradio-repos/gradio/ui/packages/form/src/Number.svelte";function Q(s){let e;const t={c:function(){e=$(s[3])},m:function(a,o){B(a,e,o)},p:function(a,o){o&8&&ee(e,a[3])},d:function(a){a&&S(e)}};return w("SvelteRegisterBlock",{block:t,id:Q.name,type:"slot",source:"(25:1) <BlockTitle {show_label}>",ctx:s}),t}function P(s){let e,t,c,a,o,u,m,d;t=new J({props:{show_label:s[4],$$slots:{default:[Q]},$$scope:{ctx:s}},$$inline:!0});const h={c:function(){e=D("label"),p(t.$$.fragment),c=z(),a=D("input"),g(a,"type","number"),g(a,"class",o="gr-box gr-input w-full gr-text-input"+k(s[1])),a.disabled=s[2],O(a,I,25,1,688),g(e,"class","block"),O(e,I,23,0,618)},l:function(i){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(i,l){B(i,e,l),v(t,e,null),T(e,c),T(e,a),U(a,s[0]),u=!0,m||(d=[q(a,"input",s[6]),q(a,"keypress",s[5],!1,!1,!1)],m=!0)},p:function(i,[l]){const f={};l&16&&(f.show_label=i[4]),l&520&&(f.$$scope={dirty:l,ctx:i}),t.$set(f),(!u||l&2&&o!==(o="gr-box gr-input w-full gr-text-input"+k(i[1])))&&g(a,"class",o),(!u||l&4)&&Z(a,"disabled",i[2]),l&1&&A(a.value)!==i[0]&&U(a,i[0])},i:function(i){u||(y(t.$$.fragment,i),u=!0)},o:function(i){N(t.$$.fragment,i),u=!1},d:function(i){i&&S(e),E(t),m=!1,x(d)}};return w("SvelteRegisterBlock",{block:h,id:P.name,type:"component",source:"",ctx:s}),h}function ie(s,e,t){let{$$slots:c={},$$scope:a}=e;V("Number",c,[]);let{value:o=0}=e,{style:u={}}=e,{disabled:m=!1}=e,{label:d}=e,{show_label:h}=e;const b=R();function i(r){b("change",r)}async function l(r){await C(),r.key==="Enter"&&(r.preventDefault(),b("submit"))}const f=["value","style","disabled","label","show_label"];Object.keys(e).forEach(r=>{!~f.indexOf(r)&&r.slice(0,2)!=="$$"&&r!=="slot"&&console.warn(`<Number> was created with unknown prop '${r}'`)});function _(){o=A(this.value),t(0,o)}return s.$$set=r=>{"value"in r&&t(0,o=r.value),"style"in r&&t(1,u=r.style),"disabled"in r&&t(2,m=r.disabled),"label"in r&&t(3,d=r.label),"show_label"in r&&t(4,h=r.show_label)},s.$capture_state=()=>({createEventDispatcher:R,tick:C,create_classes:k,BlockTitle:J,value:o,style:u,disabled:m,label:d,show_label:h,dispatch:b,handle_change:i,handle_keypress:l}),s.$inject_state=r=>{"value"in r&&t(0,o=r.value),"style"in r&&t(1,u=r.style),"disabled"in r&&t(2,m=r.disabled),"label"in r&&t(3,d=r.label),"show_label"in r&&t(4,h=r.show_label)},e&&"$$inject"in e&&s.$inject_state(e.$$inject),s.$$.update=()=>{s.$$.dirty&1&&i(o)},[o,u,m,d,h,l,_]}class W extends K{constructor(e){super(e),L(this,e,ie,P,M,{value:0,style:1,disabled:2,label:3,show_label:4}),w("SvelteRegisterComponent",{component:this,tagName:"Number",options:e,id:P.name});const{ctx:t}=this.$$,c=e.props||{};t[3]===void 0&&!("label"in c)&&console.warn("<Number> was created without expected prop 'label'"),t[4]===void 0&&!("show_label"in c)&&console.warn("<Number> was created without expected prop 'show_label'")}get value(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set value(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get style(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set style(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get disabled(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set disabled(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get label(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set label(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get show_label(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set show_label(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}function X(s){let e,t,c,a,o;const u=[s[6]];let m={};for(let i=0;i<u.length;i+=1)m=te(m,u[i]);e=new G({props:m,$$inline:!0});function d(i){s[8](i)}let h={label:s[1],show_label:s[5],style:s[3],disabled:s[7]==="static"};s[0]!==void 0&&(h.value=s[0]),c=new W({props:h,$$inline:!0}),se.push(()=>ne(c,"value",d)),c.$on("change",s[9]),c.$on("submit",s[10]);const b={c:function(){p(e.$$.fragment),t=z(),p(c.$$.fragment)},m:function(l,f){v(e,l,f),B(l,t,f),v(c,l,f),o=!0},p:function(l,f){const _=f&64?oe(u,[re(l[6])]):{};e.$set(_);const r={};f&2&&(r.label=l[1]),f&32&&(r.show_label=l[5]),f&8&&(r.style=l[3]),f&128&&(r.disabled=l[7]==="static"),!a&&f&1&&(a=!0,r.value=l[0],le(()=>a=!1)),c.$set(r)},i:function(l){o||(y(e.$$.fragment,l),y(c.$$.fragment,l),o=!0)},o:function(l){N(e.$$.fragment,l),N(c.$$.fragment,l),o=!1},d:function(l){E(e,l),l&&S(t),E(c,l)}};return w("SvelteRegisterBlock",{block:b,id:X.name,type:"slot",source:"(14:0) <Block {form_position} {elem_id} {style}>",ctx:s}),b}function j(s){let e,t;e=new H({props:{form_position:s[4],elem_id:s[2],style:s[3],$$slots:{default:[X]},$$scope:{ctx:s}},$$inline:!0});const c={c:function(){p(e.$$.fragment)},l:function(o){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(o,u){v(e,o,u),t=!0},p:function(o,[u]){const m={};u&16&&(m.form_position=o[4]),u&4&&(m.elem_id=o[2]),u&8&&(m.style=o[3]),u&2283&&(m.$$scope={dirty:u,ctx:o}),e.$set(m)},i:function(o){t||(y(e.$$.fragment,o),t=!0)},o:function(o){N(e.$$.fragment,o),t=!1},d:function(o){E(e,o)}};return w("SvelteRegisterBlock",{block:c,id:j.name,type:"component",source:"",ctx:s}),c}function ae(s,e,t){let{$$slots:c={},$$scope:a}=e;V("Number",c,[]);let{label:o="Number"}=e,{elem_id:u=""}=e,{style:m={}}=e,{value:d=0}=e,{form_position:h="single"}=e,{show_label:b}=e,{loading_status:i}=e,{mode:l}=e;const f=["label","elem_id","style","value","form_position","show_label","loading_status","mode"];Object.keys(e).forEach(n=>{!~f.indexOf(n)&&n.slice(0,2)!=="$$"&&n!=="slot"&&console.warn(`<Number> was created with unknown prop '${n}'`)});function _(n){d=n,t(0,d)}function r(n){F.call(this,s,n)}function Y(n){F.call(this,s,n)}return s.$$set=n=>{"label"in n&&t(1,o=n.label),"elem_id"in n&&t(2,u=n.elem_id),"style"in n&&t(3,m=n.style),"value"in n&&t(0,d=n.value),"form_position"in n&&t(4,h=n.form_position),"show_label"in n&&t(5,b=n.show_label),"loading_status"in n&&t(6,i=n.loading_status),"mode"in n&&t(7,l=n.mode)},s.$capture_state=()=>({Number:W,Block:H,StatusTracker:G,label:o,elem_id:u,style:m,value:d,form_position:h,show_label:b,loading_status:i,mode:l}),s.$inject_state=n=>{"label"in n&&t(1,o=n.label),"elem_id"in n&&t(2,u=n.elem_id),"style"in n&&t(3,m=n.style),"value"in n&&t(0,d=n.value),"form_position"in n&&t(4,h=n.form_position),"show_label"in n&&t(5,b=n.show_label),"loading_status"in n&&t(6,i=n.loading_status),"mode"in n&&t(7,l=n.mode)},e&&"$$inject"in e&&s.$inject_state(e.$$inject),[d,o,u,m,h,b,i,l,_,r,Y]}class ce extends K{constructor(e){super(e),L(this,e,ae,j,M,{label:1,elem_id:2,style:3,value:0,form_position:4,show_label:5,loading_status:6,mode:7}),w("SvelteRegisterComponent",{component:this,tagName:"Number_1",options:e,id:j.name});const{ctx:t}=this.$$,c=e.props||{};t[5]===void 0&&!("show_label"in c)&&console.warn("<Number> was created without expected prop 'show_label'"),t[6]===void 0&&!("loading_status"in c)&&console.warn("<Number> was created without expected prop 'loading_status'"),t[7]===void 0&&!("mode"in c)&&console.warn("<Number> was created without expected prop 'mode'")}get label(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set label(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get elem_id(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_id(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get style(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set style(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get value(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set value(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get form_position(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set form_position(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get show_label(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set show_label(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get loading_status(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set loading_status(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get mode(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set mode(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}var de=ce;const he=["static","dynamic"];export{de as Component,he as modes};
