import{S as g,i as v,s as k,d as _,v as y,h as m,B,w as L,k as I,b as w,c as f,t as u,e as E,f as h,C as x,m as P,D as j,E as S,g as C,F as D}from"./index.66004ba3.js";const p="mnt/c/Users/islam/dev/gradio-repos/gradio/ui/packages/atoms/src/BlockLabel.svelte";function d(n){let t,o,s,b,c,a;s=new n[1]({$$inline:!0});const r={c:function(){t=m("div"),o=m("span"),B(s.$$.fragment),b=L(),c=I(n[0]),w(o,"class","mr-2 h-[12px] w-[12px] opacity-80"),f(o,p,25,1,1013),w(t,"class","absolute left-0 top-0 py-1 px-2 rounded-br-lg shadow-sm text-xs text-gray-500 flex items-center pointer-events-none bg-white z-20 border-b border-r border-gray-100 dark:bg-gray-900"),u(t,"h-0",!n[2]),u(t,"sr-only",!n[2]),f(t,p,19,0,715)},l:function(e){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(e,i){E(e,t,i),h(t,o),x(s,o,null),h(t,b),h(t,c),a=!0},p:function(e,[i]){(!a||i&1)&&P(c,e[0]),i&4&&u(t,"h-0",!e[2]),i&4&&u(t,"sr-only",!e[2])},i:function(e){a||(j(s.$$.fragment,e),a=!0)},o:function(e){S(s.$$.fragment,e),a=!1},d:function(e){e&&C(t),D(s)}};return _("SvelteRegisterBlock",{block:r,id:d.name,type:"component",source:"",ctx:n}),r}function O(n,t,o){let{$$slots:s={},$$scope:b}=t;y("BlockLabel",s,[]);let{label:c=null}=t,{Icon:a}=t,{show_label:r=!0}=t;const l=["label","Icon","show_label"];return Object.keys(t).forEach(e=>{!~l.indexOf(e)&&e.slice(0,2)!=="$$"&&e!=="slot"&&console.warn(`<BlockLabel> was created with unknown prop '${e}'`)}),n.$$set=e=>{"label"in e&&o(0,c=e.label),"Icon"in e&&o(1,a=e.Icon),"show_label"in e&&o(2,r=e.show_label)},n.$capture_state=()=>({label:c,Icon:a,show_label:r}),n.$inject_state=e=>{"label"in e&&o(0,c=e.label),"Icon"in e&&o(1,a=e.Icon),"show_label"in e&&o(2,r=e.show_label)},t&&"$$inject"in t&&n.$inject_state(t.$$inject),[c,a,r]}class q extends g{constructor(t){super(t),v(this,t,O,d,k,{label:0,Icon:1,show_label:2}),_("SvelteRegisterComponent",{component:this,tagName:"BlockLabel",options:t,id:d.name});const{ctx:o}=this.$$,s=t.props||{};o[1]===void 0&&!("Icon"in s)&&console.warn("<BlockLabel> was created without expected prop 'Icon'")}get label(){throw new Error("<BlockLabel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set label(t){throw new Error("<BlockLabel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get Icon(){throw new Error("<BlockLabel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set Icon(t){throw new Error("<BlockLabel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get show_label(){throw new Error("<BlockLabel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set show_label(t){throw new Error("<BlockLabel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{q as B};
