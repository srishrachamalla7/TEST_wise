import{S as w,i as g,s as p,d as h,Z as v,v as C,h as y,b as f,t as m,c as b,e as E,_ as P,$ as j,a0 as S,D as k,E as D,g as O}from"./index.66004ba3.js";import{c as d}from"./styles.d87a390f.js";const R="src/components/Column/Column.svelte";function _(s){let e,l,a;const u=s[5].default,o=v(u,s,s[4],null),c={c:function(){e=y("div"),o&&o.c(),f(e,"id",s[0]),f(e,"class",l="flex flex-col gr-gap gr-form-gap relative col w-full "+d(s[2])),m(e,"bg-gray-50",s[1]==="panel"),m(e,"p-2",s[1]==="panel"),m(e,"rounded-lg",s[1]==="panel"),b(e,R,7,0,183)},l:function(t){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(t,i){E(t,e,i),o&&o.m(e,null),a=!0},p:function(t,[i]){o&&o.p&&(!a||i&16)&&P(o,u,t,t[4],a?S(u,t[4],i,null):j(t[4]),null),(!a||i&1)&&f(e,"id",t[0]),(!a||i&4&&l!==(l="flex flex-col gr-gap gr-form-gap relative col w-full "+d(t[2])))&&f(e,"class",l),i&6&&m(e,"bg-gray-50",t[1]==="panel"),i&6&&m(e,"p-2",t[1]==="panel"),i&6&&m(e,"rounded-lg",t[1]==="panel")},i:function(t){a||(k(o,t),a=!0)},o:function(t){D(o,t),a=!1},d:function(t){t&&O(e),o&&o.d(t)}};return h("SvelteRegisterBlock",{block:c,id:_.name,type:"component",source:"",ctx:s}),c}function q(s,e,l){let{$$slots:a={},$$scope:u}=e;C("Column",a,["default"]);let{elem_id:o=""}=e,{variant:c="default"}=e,{parent:r=null}=e,{style:t={}}=e;const i=["elem_id","variant","parent","style"];return Object.keys(e).forEach(n=>{!~i.indexOf(n)&&n.slice(0,2)!=="$$"&&n!=="slot"&&console.warn(`<Column> was created with unknown prop '${n}'`)}),s.$$set=n=>{"elem_id"in n&&l(0,o=n.elem_id),"variant"in n&&l(1,c=n.variant),"parent"in n&&l(3,r=n.parent),"style"in n&&l(2,t=n.style),"$$scope"in n&&l(4,u=n.$$scope)},s.$capture_state=()=>({create_classes:d,elem_id:o,variant:c,parent:r,style:t}),s.$inject_state=n=>{"elem_id"in n&&l(0,o=n.elem_id),"variant"in n&&l(1,c=n.variant),"parent"in n&&l(3,r=n.parent),"style"in n&&l(2,t=n.style)},e&&"$$inject"in e&&s.$inject_state(e.$$inject),[o,c,t,r,u,a]}class B extends w{constructor(e){super(e),g(this,e,q,_,p,{elem_id:0,variant:1,parent:3,style:2}),h("SvelteRegisterComponent",{component:this,tagName:"Column",options:e,id:_.name})}get elem_id(){throw new Error("<Column>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_id(e){throw new Error("<Column>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get variant(){throw new Error("<Column>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set variant(e){throw new Error("<Column>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get parent(){throw new Error("<Column>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set parent(e){throw new Error("<Column>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get style(){throw new Error("<Column>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set style(e){throw new Error("<Column>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}var z=B;const A=["static"];export{z as Component,A as modes};
