import{S as g,i as h,s as w,d,v as _,h as v,b as i,N as m,c as f,e as I,n as u,g as b}from"./index.b0283b9c.js";const E="src/components/Dataset/ExampleComponents/Image.svelte";function l(a){let e,s;const r={c:function(){e=v("img"),i(e,"class","gr-sample-image"),m(e.src,s=a[1]+a[0])||i(e,"src",s),f(e,E,5,0,117)},l:function(n){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(n,o){I(n,e,o)},p:function(n,[o]){o&3&&!m(e.src,s=n[1]+n[0])&&i(e,"src",s)},i:u,o:u,d:function(n){n&&b(e)}};return d("SvelteRegisterBlock",{block:r,id:l.name,type:"component",source:"",ctx:a}),r}function y(a,e,s){let{$$slots:r={},$$scope:c}=e;_("Image",r,[]);let{value:n}=e,{samples_dir:o}=e;const p=["value","samples_dir"];return Object.keys(e).forEach(t=>{!~p.indexOf(t)&&t.slice(0,2)!=="$$"&&t!=="slot"&&console.warn(`<Image> was created with unknown prop '${t}'`)}),a.$$set=t=>{"value"in t&&s(0,n=t.value),"samples_dir"in t&&s(1,o=t.samples_dir)},a.$capture_state=()=>({value:n,samples_dir:o}),a.$inject_state=t=>{"value"in t&&s(0,n=t.value),"samples_dir"in t&&s(1,o=t.samples_dir)},e&&"$$inject"in e&&a.$inject_state(e.$$inject),[n,o]}class j extends g{constructor(e){super(e),h(this,e,y,l,w,{value:0,samples_dir:1}),d("SvelteRegisterComponent",{component:this,tagName:"Image",options:e,id:l.name});const{ctx:s}=this.$$,r=e.props||{};s[0]===void 0&&!("value"in r)&&console.warn("<Image> was created without expected prop 'value'"),s[1]===void 0&&!("samples_dir"in r)&&console.warn("<Image> was created without expected prop 'samples_dir'")}get value(){throw new Error("<Image>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set value(e){throw new Error("<Image>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get samples_dir(){throw new Error("<Image>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set samples_dir(e){throw new Error("<Image>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}var P=j;export{P as E};
