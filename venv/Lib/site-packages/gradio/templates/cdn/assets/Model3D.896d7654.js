import{S as u,i as v,s as m,d,v as p,h as f,k as h,b as w,c as _,e as D,f as g,m as M,n as r,g as b}from"./index.b0283b9c.js";const x="src/components/Dataset/ExampleComponents/Model3D.svelte";function l(o){let e,s;const a={c:function(){e=f("div"),s=h(o[0]),w(e,"class","gr-sample-3d"),_(e,x,3,0,47)},l:function(t){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(t,i){D(t,e,i),g(e,s)},p:function(t,[i]){i&1&&M(s,t[0])},i:r,o:r,d:function(t){t&&b(e)}};return d("SvelteRegisterBlock",{block:a,id:l.name,type:"component",source:"",ctx:o}),a}function E(o,e,s){let{$$slots:a={},$$scope:c}=e;p("Model3D",a,[]);let{value:t}=e;const i=["value"];return Object.keys(e).forEach(n=>{!~i.indexOf(n)&&n.slice(0,2)!=="$$"&&n!=="slot"&&console.warn(`<Model3D> was created with unknown prop '${n}'`)}),o.$$set=n=>{"value"in n&&s(0,t=n.value)},o.$capture_state=()=>({value:t}),o.$inject_state=n=>{"value"in n&&s(0,t=n.value)},e&&"$$inject"in e&&o.$inject_state(e.$$inject),[t]}class j extends u{constructor(e){super(e),v(this,e,E,l,m,{value:0}),d("SvelteRegisterComponent",{component:this,tagName:"Model3D",options:e,id:l.name});const{ctx:s}=this.$$,a=e.props||{};s[0]===void 0&&!("value"in a)&&console.warn("<Model3D> was created without expected prop 'value'")}get value(){throw new Error("<Model3D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set value(e){throw new Error("<Model3D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}var S=j;export{S as E};
