import{S as k,i as E,s as I,d as h,v as j,h as U,B as P,b as c,c as m,e as B,f as b,C as z,l as A,n as p,D as w,E as v,g as x,F as L,K as J,a as g,a2 as f,y as D,w as Q,t as y,G as T,H as V}from"./index.b0283b9c.js";const q="mnt/c/Users/islam/dev/gradio-repos/gradio/ui/packages/atoms/src/IconButton.svelte";function C(i){let e,n,s,r,t,l;s=new i[0]({$$inline:!0});const a={c:function(){e=U("button"),n=U("div"),P(s.$$.fragment),c(n,"class","m-t-1 w-[60%] h-[60%] opacity-80 dark:text-white"),m(n,q,8,1,281),c(e,"class","text-gray-500 bg-white/90 h-5 w-5 flex items-center justify-center rounded shadow-sm hover:shadow-xl hover:ring-1 ring-inset ring-gray-200 z-10 dark:bg-gray-900 dark:ring-gray-600"),m(e,q,4,0,70)},l:function(d){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(d,M){B(d,e,M),b(e,n),z(s,n,null),r=!0,t||(l=A(e,"click",i[1],!1,!1,!1),t=!0)},p,i:function(d){r||(w(s.$$.fragment,d),r=!0)},o:function(d){v(s.$$.fragment,d),r=!1},d:function(d){d&&x(e),L(s),t=!1,l()}};return h("SvelteRegisterBlock",{block:a,id:C.name,type:"component",source:"",ctx:i}),a}function W(i,e,n){let{$$slots:s={},$$scope:r}=e;j("IconButton",s,[]);let{Icon:t}=e;const l=["Icon"];Object.keys(e).forEach(o=>{!~l.indexOf(o)&&o.slice(0,2)!=="$$"&&o!=="slot"&&console.warn(`<IconButton> was created with unknown prop '${o}'`)});function a(o){J.call(this,i,o)}return i.$$set=o=>{"Icon"in o&&n(0,t=o.Icon)},i.$capture_state=()=>({Icon:t}),i.$inject_state=o=>{"Icon"in o&&n(0,t=o.Icon)},e&&"$$inject"in e&&i.$inject_state(e.$$inject),[t,a]}class N extends k{constructor(e){super(e),E(this,e,W,C,I,{Icon:0}),h("SvelteRegisterComponent",{component:this,tagName:"IconButton",options:e,id:C.name});const{ctx:n}=this.$$,s=e.props||{};n[0]===void 0&&!("Icon"in s)&&console.warn("<IconButton> was created without expected prop 'Icon'")}get Icon(){throw new Error("<IconButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set Icon(e){throw new Error("<IconButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}const _="mnt/c/Users/islam/dev/gradio-repos/gradio/ui/packages/icons/src/Clear.svelte";function S(i){let e,n,s,r;const t={c:function(){e=g("svg"),n=g("g"),s=g("path"),r=g("path"),c(s,"d","M18,6L6.087,17.913"),f(s,"fill","none"),f(s,"fill-rule","nonzero"),f(s,"stroke-width","2px"),m(s,_,14,2,374),c(n,"transform","matrix(1.14096,-0.140958,-0.140958,1.14096,-0.0559523,0.0559523)"),m(n,_,11,1,287),c(r,"d","M4.364,4.364L19.636,19.636"),f(r,"fill","none"),f(r,"fill-rule","nonzero"),f(r,"stroke-width","2px"),m(r,_,19,1,475),c(e,"width","100%"),c(e,"height","100%"),c(e,"viewBox","0 0 24 24"),c(e,"version","1.1"),c(e,"xmlns","http://www.w3.org/2000/svg"),c(e,"xmlns:xlink","http://www.w3.org/1999/xlink"),c(e,"xml:space","preserve"),c(e,"stroke","currentColor"),f(e,"fill-rule","evenodd"),f(e,"clip-rule","evenodd"),f(e,"stroke-linecap","round"),f(e,"stroke-linejoin","round"),m(e,_,0,0,0)},l:function(a){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(a,o){B(a,e,o),b(e,n),b(n,s),b(e,r)},p,i:p,o:p,d:function(a){a&&x(e)}};return h("SvelteRegisterBlock",{block:t,id:S.name,type:"component",source:"",ctx:i}),t}function X(i,e){let{$$slots:n={},$$scope:s}=e;j("Clear",n,[]);const r=[];return Object.keys(e).forEach(t=>{!~r.indexOf(t)&&t.slice(0,2)!=="$$"&&t!=="slot"&&console.warn(`<Clear> was created with unknown prop '${t}'`)}),[]}class G extends k{constructor(e){super(e),E(this,e,X,S,I,{}),h("SvelteRegisterComponent",{component:this,tagName:"Clear",options:e,id:S.name})}}const F="mnt/c/Users/islam/dev/gradio-repos/gradio/ui/packages/icons/src/Edit.svelte";function R(i){let e,n;const s={c:function(){e=g("svg"),n=g("path"),c(n,"d","M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z"),m(n,F,11,2,230),c(e,"xmlns","http://www.w3.org/2000/svg"),c(e,"width","100%"),c(e,"height","100%"),c(e,"viewBox","0 0 24 24"),c(e,"fill","none"),c(e,"stroke","currentColor"),c(e,"stroke-width","1.5"),c(e,"stroke-linecap","round"),c(e,"stroke-linejoin","round"),c(e,"class","feather feather-edit-2"),m(e,F,0,0,0)},l:function(t){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(t,l){B(t,e,l),b(e,n)},p,i:p,o:p,d:function(t){t&&x(e)}};return h("SvelteRegisterBlock",{block:s,id:R.name,type:"component",source:"",ctx:i}),s}function Y(i,e){let{$$slots:n={},$$scope:s}=e;j("Edit",n,[]);const r=[];return Object.keys(e).forEach(t=>{!~r.indexOf(t)&&t.slice(0,2)!=="$$"&&t!=="slot"&&console.warn(`<Edit> was created with unknown prop '${t}'`)}),[]}class H extends k{constructor(e){super(e),E(this,e,Y,R,I,{}),h("SvelteRegisterComponent",{component:this,tagName:"Edit",options:e,id:R.name})}}const Z="mnt/c/Users/islam/dev/gradio-repos/gradio/ui/packages/upload/src/ModifyUpload.svelte";function $(i){let e,n;e=new N({props:{Icon:H},$$inline:!0}),e.$on("click",i[4]);const s={c:function(){P(e.$$.fragment)},m:function(t,l){z(e,t,l),n=!0},p,i:function(t){n||(w(e.$$.fragment,t),n=!0)},o:function(t){v(e.$$.fragment,t),n=!1},d:function(t){L(e,t)}};return h("SvelteRegisterBlock",{block:s,id:$.name,type:"if",source:"(15:1) {#if editable}",ctx:i}),s}function O(i){let e,n,s,r,t=i[0]&&$(i);s=new N({props:{Icon:G},$$inline:!0}),s.$on("click",i[5]);const l={c:function(){e=U("div"),t&&t.c(),n=Q(),P(s.$$.fragment),c(e,"class","modify-upload z-10 top-2 right-2 justify-end flex gap-1"),y(e,"absolute",i[1]),y(e,"m-1",!i[1]),m(e,Z,9,0,288)},l:function(o){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(o,d){B(o,e,d),t&&t.m(e,null),b(e,n),z(s,e,null),r=!0},p:function(o,[d]){o[0]?t?(t.p(o,d),d&1&&w(t,1)):(t=$(o),t.c(),w(t,1),t.m(e,n)):t&&(T(),v(t,1,1,()=>{t=null}),V()),d&2&&y(e,"absolute",o[1]),d&2&&y(e,"m-1",!o[1])},i:function(o){r||(w(t),w(s.$$.fragment,o),r=!0)},o:function(o){v(t),v(s.$$.fragment,o),r=!1},d:function(o){o&&x(e),t&&t.d(),L(s)}};return h("SvelteRegisterBlock",{block:l,id:O.name,type:"component",source:"",ctx:i}),l}function ee(i,e,n){let{$$slots:s={},$$scope:r}=e;j("ModifyUpload",s,[]);let{editable:t=!1}=e,{absolute:l=!0}=e,{style:a=""}=e;const o=D(),d=["editable","absolute","style"];Object.keys(e).forEach(u=>{!~d.indexOf(u)&&u.slice(0,2)!=="$$"&&u!=="slot"&&console.warn(`<ModifyUpload> was created with unknown prop '${u}'`)});const M=()=>o("edit"),K=()=>o("clear");return i.$$set=u=>{"editable"in u&&n(0,t=u.editable),"absolute"in u&&n(1,l=u.absolute),"style"in u&&n(3,a=u.style)},i.$capture_state=()=>({IconButton:N,Edit:H,Clear:G,createEventDispatcher:D,editable:t,absolute:l,style:a,dispatch:o}),i.$inject_state=u=>{"editable"in u&&n(0,t=u.editable),"absolute"in u&&n(1,l=u.absolute),"style"in u&&n(3,a=u.style)},e&&"$$inject"in e&&i.$inject_state(e.$$inject),[t,l,o,a,M,K]}class ne extends k{constructor(e){super(e),E(this,e,ee,O,I,{editable:0,absolute:1,style:3}),h("SvelteRegisterComponent",{component:this,tagName:"ModifyUpload",options:e,id:O.name})}get editable(){throw new Error("<ModifyUpload>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set editable(e){throw new Error("<ModifyUpload>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get absolute(){throw new Error("<ModifyUpload>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set absolute(e){throw new Error("<ModifyUpload>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get style(){throw new Error("<ModifyUpload>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set style(e){throw new Error("<ModifyUpload>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{G as C,N as I,ne as M};
