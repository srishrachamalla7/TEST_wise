import{S as y,i as E,s as j,d as p,v as S,R as g,T as $,Z as P,B as h,C as w,D as d,E as f,F as C,K as R,w as B,e as D,U as O,V as T,_ as q,$ as F,a0 as K,g as N}from"./index.b0283b9c.js";import{C as b}from"./CarouselItem.svelte_svelte_type_style_lang.a45107b9.js";function v(o){let e,r,i;const l=[o[1]];let s={};for(let t=0;t<l.length;t+=1)s=$(s,l[t]);e=new g({props:s,$$inline:!0});const c=o[2].default,a=P(c,o,o[4],null),_={c:function(){h(e.$$.fragment),r=B(),a&&a.c()},m:function(n,u){w(e,n,u),D(n,r,u),a&&a.m(n,u),i=!0},p:function(n,u){const k=u&2?O(l,[T(n[1])]):{};e.$set(k),a&&a.p&&(!i||u&16)&&q(a,c,n,n[4],i?K(c,n[4],u,null):F(n[4]),null)},i:function(n){i||(d(e.$$.fragment,n),d(a,n),i=!0)},o:function(n){f(e.$$.fragment,n),f(a,n),i=!1},d:function(n){C(e,n),n&&N(r),a&&a.d(n)}};return p("SvelteRegisterBlock",{block:_,id:v.name,type:"slot",source:"(7:0) <Carousel {elem_id} on:change>",ctx:o}),_}function m(o){let e,r;e=new b({props:{elem_id:o[0],$$slots:{default:[v]},$$scope:{ctx:o}},$$inline:!0}),e.$on("change",o[3]);const i={c:function(){h(e.$$.fragment)},l:function(s){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(s,c){w(e,s,c),r=!0},p:function(s,[c]){const a={};c&1&&(a.elem_id=s[0]),c&18&&(a.$$scope={dirty:c,ctx:s}),e.$set(a)},i:function(s){r||(d(e.$$.fragment,s),r=!0)},o:function(s){f(e.$$.fragment,s),r=!1},d:function(s){C(e,s)}};return p("SvelteRegisterBlock",{block:i,id:m.name,type:"component",source:"",ctx:o}),i}function U(o,e,r){let{$$slots:i={},$$scope:l}=e;S("Carousel",i,["default"]);let{elem_id:s=""}=e,{loading_status:c}=e;const a=["elem_id","loading_status"];Object.keys(e).forEach(t=>{!~a.indexOf(t)&&t.slice(0,2)!=="$$"&&t!=="slot"&&console.warn(`<Carousel> was created with unknown prop '${t}'`)});function _(t){R.call(this,o,t)}return o.$$set=t=>{"elem_id"in t&&r(0,s=t.elem_id),"loading_status"in t&&r(1,c=t.loading_status),"$$scope"in t&&r(4,l=t.$$scope)},o.$capture_state=()=>({Carousel:b,StatusTracker:g,elem_id:s,loading_status:c}),o.$inject_state=t=>{"elem_id"in t&&r(0,s=t.elem_id),"loading_status"in t&&r(1,c=t.loading_status)},e&&"$$inject"in e&&o.$inject_state(e.$$inject),[s,c,i,_,l]}class V extends y{constructor(e){super(e),E(this,e,U,m,j,{elem_id:0,loading_status:1}),p("SvelteRegisterComponent",{component:this,tagName:"Carousel_1",options:e,id:m.name});const{ctx:r}=this.$$,i=e.props||{};r[1]===void 0&&!("loading_status"in i)&&console.warn("<Carousel> was created without expected prop 'loading_status'")}get elem_id(){throw new Error("<Carousel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_id(e){throw new Error("<Carousel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get loading_status(){throw new Error("<Carousel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set loading_status(e){throw new Error("<Carousel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}var A=V;const G=["static"];export{A as Component,G as modes};
